export ROUTE_FLOW_DIR :=$(realpath $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST)))))

##==============================================================================
##  ___          _         _____                  _      
## | _ \___ _  _| |_ ___  |_   _|_ _ _ _ __ _ ___| |_ ___
## |   / _ \ || |  _/ -_)   | |/ _` | '_/ _` / -_)  _(_-<
## |_|_\___/\_,_|\__\___|   |_|\__,_|_| \__, \___|\__/__/
##                                      |___/            
##==============================================================================

export ROUTE_RUN_DIR ?=$(BUILD_DIR)/route

ROUTE_CORE_COUNT ?=4

#=======================================
# ROUTE
#=======================================

route: route.final
	@## Alias to run all route steps.
	@##     1. route.setup
	@##     2. route.global
	@##     3. route.detail
	@##     4. route.final

#=======================================
# SETUP
#=======================================

route.setup: cts.final
	@## Prepare for routing.
	mkdir -p $(ROUTE_RUN_DIR)/{logs,results,reports,etc,temp}
	ln -nsf $(OPENROAD)/share/replace/PORT9.dat $(ROUTE_RUN_DIR)/PORT9.dat
	ln -nsf $(OPENROAD)/share/replace/POST9.dat $(ROUTE_RUN_DIR)/POST9.dat
	ln -nsf $(OPENROAD)/share/replace/POWV9.dat $(ROUTE_RUN_DIR)/POWV9.dat
	ln -nsf $(OPENROAD)/share/replace/PORT9.dat $(ROUTE_RUN_DIR)/etc/PORT9.dat
	ln -nsf $(OPENROAD)/share/replace/POST9.dat $(ROUTE_RUN_DIR)/etc/POST9.dat
	ln -nsf $(OPENROAD)/share/replace/POWV9.dat $(ROUTE_RUN_DIR)/etc/POWV9.dat
	touch $(BUILD_VPATH)/$@

#=======================================
# GLOBAL
#=======================================

export ROUTE_GLOBAL_IN_V    := $(CTS_FINAL_OUT_V)
export ROUTE_GLOBAL_IN_SDC  := $(CTS_FINAL_OUT_SDC)
export ROUTE_GLOBAL_IN_DEF  := $(CTS_FINAL_OUT_DEF)

# No output files (non-transformative step)

route.global: route.setup
	@## Create global routing guides for the detailed router.
	$(eval export REL_LEF_FILE=$(shell realpath --relative-to=$(ROUTE_RUN_DIR)/results $(LEF_FILE)))
	$(eval export REL_DEF_FILE=$(shell realpath --relative-to=$(ROUTE_RUN_DIR)/results $(ROUTE_GLOBAL_IN_DEF)))
	envsubst < $(ROUTE_FLOW_DIR)/scripts/fastroute.rsyn > $(ROUTE_RUN_DIR)/results/fastroute.rsyn
	cd $(ROUTE_RUN_DIR) && \
		(time FRlefdef \
			--no-gui \
			--script results/fastroute.rsyn \
		) 2>&1 | tee -i logs/$@.log
	! grep --color -i "^error" $(ROUTE_RUN_DIR)/logs/$@.log
	touch $(BUILD_VPATH)/$@

#=======================================
# DETAIL
#=======================================

export ROUTE_DETAIL_IN_V    := $(ROUTE_GLOBAL_IN_V)
export ROUTE_DETAIL_IN_SDC  := $(ROUTE_GLOBAL_IN_SDC)
export ROUTE_DETAIL_IN_DEF  := $(ROUTE_GLOBAL_IN_DEF)
export ROUTE_DETAIL_OUT_V   := $(ROUTE_RUN_DIR)/results/route.detail.v
export ROUTE_DETAIL_OUT_SDC := $(ROUTE_RUN_DIR)/results/route.detail.sdc
export ROUTE_DETAIL_OUT_DEF := $(ROUTE_RUN_DIR)/results/route.detail.def

route.detail: route.global
	@## Perform detailed routing.
	cp $(ROUTE_FLOW_DIR)/scripts/triton_route.config $(ROUTE_RUN_DIR)/triton_route.config
	sed -i "s/<LEF>/$(subst /,\/,$(LEF_FILE))/g" $(ROUTE_RUN_DIR)/triton_route.config
	sed -i "s/<DEF>/$(subst /,\/,$(ROUTE_DETAIL_IN_DEF))/g" $(ROUTE_RUN_DIR)/triton_route.config
	sed -i "s/<CORES>/$(ROUTE_CORE_COUNT)/g" $(ROUTE_RUN_DIR)/triton_route.config
	sed -i "s/<OUTPUT>/$(subst /,\/,$(ROUTE_DETAIL_OUT_DEF))/g" $(ROUTE_RUN_DIR)/triton_route.config
	cd $(ROUTE_RUN_DIR) && (time TritonRoute triton_route.config) 2>&1 | tee -i logs/$@.log
	cp $(ROUTE_DETAIL_IN_V) $(ROUTE_DETAIL_OUT_V)
	cp $(ROUTE_DETAIL_IN_SDC) $(ROUTE_DETAIL_OUT_SDC)
	! grep --color -i "^error" $(ROUTE_RUN_DIR)/logs/$@.log
	touch $(BUILD_VPATH)/$@

#=======================================
# FINAL
#=======================================

ROUTE_FINAL_OP :=cp
#ROUTE_FINAL_OP :=ln -nsf

export ROUTE_FINAL_IN_V    := $(ROUTE_DETAIL_OUT_V)
export ROUTE_FINAL_IN_SDC  := $(ROUTE_DETAIL_OUT_SDC)
export ROUTE_FINAL_IN_DEF  := $(ROUTE_DETAIL_OUT_DEF)
export ROUTE_FINAL_OUT_V   := $(ROUTE_RUN_DIR)/results/route.final.v
export ROUTE_FINAL_OUT_SDC := $(ROUTE_RUN_DIR)/results/route.final.sdc
export ROUTE_FINAL_OUT_DEF := $(ROUTE_RUN_DIR)/results/route.final.def

route.final: route.detail
	@## Finalize routing.
	$(ROUTE_FINAL_OP) $(ROUTE_FINAL_IN_V)   $(ROUTE_FINAL_OUT_V)
	$(ROUTE_FINAL_OP) $(ROUTE_FINAL_IN_SDC) $(ROUTE_FINAL_OUT_SDC)
	$(ROUTE_FINAL_OP) $(ROUTE_FINAL_IN_DEF) $(ROUTE_FINAL_OUT_DEF)
	touch $(BUILD_VPATH)/$@

#=======================================
# CLEAN
#=======================================

clean.route: clean.route.setup
	@## Alias to cleanup all route steps.

clean.route.setup: are_you_sure clean.route.global
	@## Cleanup the route.setup target.
	rm -rf $(ROUTE_RUN_DIR)
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

clean.route.global: are_you_sure clean.route.detail
	@## Cleanup the route.global target.
	rm -f $(ROUTE_RUN_DIR)/logs/$(subst clean.,,$@).log
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

clean.route.detail: are_you_sure clean.route.final
	@## Cleanup the route.detail target.
	rm -f $(ROUTE_DETAIL_OUT_V)
	rm -f $(ROUTE_DETAIL_OUT_SDC)
	rm -f $(ROUTE_DETAIL_OUT_DEF)
	rm -f $(ROUTE_RUN_DIR)/logs/$(subst clean.,,$@).log
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

clean.route.final: are_you_sure clean.finish
	@## Cleanup the route.final target.
	rm -f $(ROUTE_FINAL_OUT_V)
	rm -f $(ROUTE_FINAL_OUT_SDC)
	rm -f $(ROUTE_FINAL_OUT_DEF)
	rm -f $(ROUTE_RUN_DIR)/logs/$(subst clean.,,$@).log
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

