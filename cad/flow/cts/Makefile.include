export CTS_FLOW_DIR :=$(realpath $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST)))))

##==============================================================================
##   ___ _____ ___   _____                  _      
##  / __|_   _/ __| |_   _|_ _ _ _ __ _ ___| |_ ___
## | (__  | | \__ \   | |/ _` | '_/ _` / -_)  _(_-<
##  \___| |_| |___/   |_|\__,_|_| \__, \___|\__/__/
##                                |___/            
##==============================================================================

export CTS_RUN_DIR ?=$(BUILD_DIR)/cts

#=======================================
# CTS
#=======================================

cts: cts.final
	@## Alias to run all cts steps.
	@##     1. cts.setup
	@##     2. cts.detail
	@##     3. cts.final

#=======================================
# SETUP
#=======================================

cts.setup: place.final
	@## Prepare for clock tree synthesis.
	mkdir -p $(CTS_RUN_DIR)/{logs,results,reports,etc,temp}
	ln -nsf $(OPENROAD)/share/replace/PORT9.dat $(CTS_RUN_DIR)/PORT9.dat
	ln -nsf $(OPENROAD)/share/replace/POST9.dat $(CTS_RUN_DIR)/POST9.dat
	ln -nsf $(OPENROAD)/share/replace/POWV9.dat $(CTS_RUN_DIR)/POWV9.dat
	ln -nsf $(OPENROAD)/share/replace/PORT9.dat $(CTS_RUN_DIR)/etc/PORT9.dat
	ln -nsf $(OPENROAD)/share/replace/POST9.dat $(CTS_RUN_DIR)/etc/POST9.dat
	ln -nsf $(OPENROAD)/share/replace/POWV9.dat $(CTS_RUN_DIR)/etc/POWV9.dat
	touch $(BUILD_VPATH)/$@

#=======================================
# DETAIL
#=======================================

export CTS_DETAIL_IN_V    := $(PLACE_FINAL_OUT_V)
export CTS_DETAIL_IN_SDC  := $(PLACE_FINAL_OUT_SDC)
export CTS_DETAIL_IN_DEF  := $(PLACE_FINAL_OUT_DEF)
export CTS_DETAIL_OUT_V   := $(CTS_RUN_DIR)/results/cts.detail.v
export CTS_DETAIL_OUT_SDC := $(CTS_RUN_DIR)/results/cts.detail.sdc
export CTS_DETAIL_OUT_DEF := $(CTS_RUN_DIR)/results/cts.detail.def

cts.detail: cts.setup
	@# Perform clock tree synthesis
	$(eval export CORE_WIDTH :=$(shell echo "`cat $(CTS_DETAIL_IN_DEF) | grep "^DIEAREA" | awk '{print $$7}'`/2000 - $(FP_CORE_SPACE)" | bc -l))
	$(eval export CORE_HEIGHT:=$(shell echo "`cat $(CTS_DETAIL_IN_DEF) | grep "^DIEAREA" | awk '{print $$8}'`/2000 - $(FP_CORE_SPACE)" | bc -l))
	$(eval export CLOCK_PORT :=$(shell cat $(SYNTH_YOSYS_OUT_SDC) | grep "^create_clock" | grep -wo "get_ports\s*\w*" | cut -d " " -f 2))
	cp $(CTS_FLOW_DIR)/scripts/triton_cts.config $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<DESIGN>/$(DESIGN_NAME)/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<LEF>/$(subst /,\/,$(LEF_FILE))/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<DEF>/$(subst /,\/,$(CTS_DETAIL_IN_DEF))/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<VERILOG>/$(subst /,\/,$(CTS_DETAIL_IN_V))/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<CLOCK_PORT>/$(CLOCK_PORT)/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<WIDTH>/$(CORE_WIDTH)/g" $(CTS_RUN_DIR)/triton_cts.config
	sed -i "s/<HEIGHT>/$(CORE_HEIGHT)/g" $(CTS_RUN_DIR)/triton_cts.config
	cd $(CTS_RUN_DIR) && source $(TOOLS_DIR)/python_venv/bin/activate && \
		(time $(OPENROAD)/TritonCTS/runTritonCTS.tcl \
			-configFilePath=triton_cts.config \
			-scriptsPath=$(OPENROAD)/TritonCTS/scripts \
			-techFilesPath=$(CTS_TECH_DIR) \
			-lefDefParserPath=$(OPENROAD)/TritonCTS/bin/lefdef2cts \
			-executablePath=$(OPENROAD)/TritonCTS/bin/genHtree \
			-legalizerPath=$(OPENROAD)/bin/opendp \
			-outputPath=results/run \
		) 2>&1 | tee -i logs/$@.log
	cp $(CTS_DETAIL_IN_SDC) $(CTS_DETAIL_OUT_SDC)
	cp $(CTS_RUN_DIR)/results/run/final.v $(CTS_DETAIL_OUT_V)
	cp $(CTS_RUN_DIR)/results/run/cts_final.def $(CTS_DETAIL_OUT_DEF)
	! grep --color -i "^error" $(CTS_RUN_DIR)/logs/$@.log
	touch $(BUILD_VPATH)/$@

#=======================================
# FINAL
#=======================================

CTS_FINAL_OP :=cp
#CTS_FINAL_OP :=ln -nsf

export CTS_FINAL_IN_V    := $(CTS_DETAIL_OUT_V)
export CTS_FINAL_IN_SDC  := $(CTS_DETAIL_OUT_SDC)
export CTS_FINAL_IN_DEF  := $(CTS_DETAIL_OUT_DEF)
export CTS_FINAL_OUT_V   := $(CTS_RUN_DIR)/results/cts.final.v
export CTS_FINAL_OUT_SDC := $(CTS_RUN_DIR)/results/cts.final.sdc
export CTS_FINAL_OUT_DEF := $(CTS_RUN_DIR)/results/cts.final.def

cts.final: cts.detail
	@## Finalize clock tree synthsis.
	cp $(CTS_FINAL_IN_V)   $(CTS_FINAL_OUT_V)
	cp $(CTS_FINAL_IN_SDC) $(CTS_FINAL_OUT_SDC)
	cp $(CTS_FINAL_IN_DEF) $(CTS_FINAL_OUT_DEF)
	touch $(BUILD_VPATH)/$@

#=======================================
# CLEAN
#=======================================

clean.cts: clean.cts.setup
	@## Alias to cleanup all cts steps.

clean.cts.setup: are_you_sure clean.cts.detail
	@## Cleanup the cts.setup target.
	rm -rf $(CTS_RUN_DIR)
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

clean.cts.detail: are_you_sure clean.cts.final
	@## Cleanup the cts.detail target.
	rm -f $(CTS_DETAIL_OUT_V)
	rm -f $(CTS_DETAIL_OUT_SDC)
	rm -f $(CTS_DETAIL_OUT_DEF)
	rm -f $(CTS_RUN_DIR)/logs/$(subst clean.,,$@).log
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

clean.cts.final: are_you_sure clean.route
	@## Cleanup the cts.final target.
	rm -f $(CTS_FINAL_OUT_V)
	rm -f $(CTS_FINAL_OUT_SDC)
	rm -f $(CTS_FINAL_OUT_DEF)
	rm -f $(CTS_RUN_DIR)/logs/$(subst clean.,,$@).log
	rm -f $(BUILD_VPATH)/$(subst clean.,,$@)

